var documenterSearchIndex = {"docs":
[{"location":"#Peaks.jl","page":"Peaks.jl","title":"Peaks.jl","text":"","category":"section"},{"location":"","page":"Peaks.jl","title":"Peaks.jl","text":"argmaxima\nargminima\nfindmaxima\nfindminima\npeakprom\npeakprom!\npeakwidth\npeakwidth!\nfindnextmaxima\nfindnextminima","category":"page"},{"location":"#Peaks.argmaxima","page":"Peaks.jl","title":"Peaks.argmaxima","text":"argmaxima(x[, w=1; strict=true])\n\nFind the indices of the local maxima of x where each maxima i is either the maximum of x[i-w:i+w] or the first index of a plateau.\n\nIf strict is true, all elements of x[i-w:i+w] or the bounds of a plateau must exist and must not be missing or NaN. For strict == false, a maxima is the maximum or first element of all existing and non-NaN or missing elements in x[i-w:i+w] or the bounds of a plateau.\n\nSee also: findmaxima, findnextmaxima\n\nExamples\n\njulia> argmaxima([0,2,0,1,1,0])\n2-element Vector{Int64}:\n 2\n 4\n\njulia> argmaxima([2,0,1,1])\nInt64[]\n\njulia> argmaxima([2,0,1,1]; strict=false)\n2-element Vector{Int64}:\n 1\n 3\n\n\n\n\n\n","category":"function"},{"location":"#Peaks.argminima","page":"Peaks.jl","title":"Peaks.argminima","text":"argminima(x[, w=1; strict=false])\n\nFind the indices of the local minima of x where each minima i is either the minimum of x[i-w:i+w] or the first index of a plateau.\n\nIf strict is true, all elements of x[i-w:i+w] or the bounds of a plateau must exist and must not be missing or NaN. For strict == false, a minima is the minimum or first element of all existing and non-NaN or missing elements in x[i-w:i+w] or the bounds of a plateau.\n\nSee also: findminima, findnextminima\n\nExamples\n\njulia> argminima([3,2,3,1,1,3])\n2-element Vector{Int64}:\n 2\n 4\n\njulia> argminima([2,3,1,1])\nInt64[]\n\njulia> argminima([2,3,1,1]; strict=false)\n2-element Vector{Int64}:\n 1\n 3\n\n\n\n\n\n","category":"function"},{"location":"#Peaks.findmaxima","page":"Peaks.jl","title":"Peaks.findmaxima","text":"findmaxima(x[, w=1; strict=true]) -> (idxs, vals)\n\nFind the indices and values of the local maxima of x where each maxima i is either the maximum of x[i-w:i+w] or the first index of a plateau.\n\nSee also: argmaxima, findnextmaxima\n\n\n\n\n\n","category":"function"},{"location":"#Peaks.findminima","page":"Peaks.jl","title":"Peaks.findminima","text":"findminima(x[, w=1; strict=true]) -> (idxs, vals)\n\nFind the indices and values of the local minima of x where each minima i is either the minimum of x[i-w:i+w] or the first index of a plateau.\n\nSee also: argminima, findnextminima\n\n\n\n\n\n","category":"function"},{"location":"#Peaks.findnextmaxima","page":"Peaks.jl","title":"Peaks.findnextmaxima","text":"findnextmaxima(x, i[, w=1; strict=true])\n\nFind the index of the next maxima in x after or including i, where the maxima i is either the maximum of x[i-w:i+w] or the first index of a plateau. Returns lastindex(x) + 1 if no maxima occur after i.\n\nIf strict is true, all elements in x[i-w:i+w] or the bounds of a plateau must exist and must not be missing or NaN. For strict == false, a maxima is the maximum or first element of all existing and non-NaN or missing elements in x[i-w:i+w] or the bounds of a plateau.\n\nSee also: argmaxima\n\nExamples\n\njulia> findnextmaxima([0,2,0,1,1,0], 2)\n2\n\njulia> findnextmaxima([0,2,0,1,1,0], 3)\n4\n\n\n\n\n\n\n","category":"function"},{"location":"#Peaks.findnextminima","page":"Peaks.jl","title":"Peaks.findnextminima","text":"findnextminima(x, i[, w=1, strict=true])\n\nFind the index of the next minima in x after or including i, where the minima i is either the minimum of x[i-w:i+w] or the first index of a plateau. Returns lastindex(x) + 1 if no minima occur after i.\n\nIf strict is true, all elements in x[i-w:i+w] or the bounds of a plateau must exist and must not be missing or NaN. For strict == false, a minima is the minimum or first element of all existing and non-NaN or missing elements in x[i-w:i+w] or the bounds of a plateau.\n\nSee also: argminima\n\nExamples\n\njulia> findnextminima([3,2,3,1,1,3], 2)\n2\n\njulia> findnextminima([3,2,3,1,1,3], 3)\n4\n\n\n\n\n\n\n","category":"function"}]
}
